name: Sonarcloud Analysis

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Cache SonarCloud dependencies
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-${{ hashFiles('.sonar/scanner/*') }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore --locked-mode

      - name: Install SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool install dotnet-sonarscanner --tool-path ~/.sonar/scanner

      - name: Begin SonarCloud analysis
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin \
            /k:"lncodes_csharp-abstract-demo" \
            /o:"lncodes" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Build the application
        run: dotnet build --configuration Release --no-restore

      - name: End SonarCloud analysis
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"